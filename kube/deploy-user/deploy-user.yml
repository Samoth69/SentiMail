apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: sentimail-dev
  name: r-github-deploy
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["pods", "deployments", "services"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["apps"]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: ["traefik.containo.us", "traefik.io"]
    resources: ["ingressroutes", "middlewares", "tlsoptions"]
    verbs: ["*"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  # annotations:
  #   kubernetes.io/enforce-mountable-secrets: "true"
  name: sa-github-deploy
  namespace: sentimail-dev
---
apiVersion: v1
kind: Secret
metadata:
  name: github-deploy-secret
  annotations:
    kubernetes.io/service-account.name: sa-github-deploy
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "jane" to read pods in the "default" namespace.
# You need to already have a Role named "pod-reader" in that namespace.
kind: RoleBinding
metadata:
  name: rb-github-deploy
  namespace: sentimail-dev
subjects:
  # You can specify more than one "subject"
  - kind: ServiceAccount
    name: sa-github-deploy # "name" is case sensitive
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: Role #this must be Role or ClusterRole
  name: r-github-deploy # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io
