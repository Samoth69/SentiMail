name: The CI
on:
  push:
    branches: [ "dev", "refactoCI" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
    
jobs:
  scan_sonarqube:
    name: scan sonarqube
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build_backend:
    runs-on: ubuntu-latest
    name: Build backend
    outputs:
      image_id: ${{ steps.build.outputs.imageid }}
    steps:
      - uses: actions/checkout@v4
      - id: build
        uses: samoth69/build-push-check-action@v4
        with:
          registry_hostname: ${{ vars.HARBOR_HOSTNAME }}
          registry_username: ${{ secrets.HARBOR_USERNAME }}
          registry_password: ${{ secrets.HARBOR_PASSWORD }}
          build_tag: "sentimail/backend:latest"
          build_context: "backend"
  
  build_front:
    runs-on: ubuntu-latest
    name: Build front
    outputs:
      image_id: ${{ steps.build.outputs.imageid }}
    steps:
      - uses: actions/checkout@v4
      - id: build
        uses: samoth69/build-push-check-action@v4
        with:
          registry_hostname: ${{ vars.HARBOR_HOSTNAME }}
          registry_username: ${{ secrets.HARBOR_USERNAME }}
          registry_password: ${{ secrets.HARBOR_PASSWORD }}
          build_tag: "sentimail/frontend:latest"
          build_context: "backend"
          build_dockerfile: "backend/Dockerfile.front"

  build_ms_content:
    runs-on: ubuntu-latest
    name: Build ms content
    outputs:
      image_id: ${{ steps.build.outputs.imageid }}
    steps:
      - uses: actions/checkout@v4
      - id: build
        uses: samoth69/build-push-check-action@v4
        with:
          registry_hostname: ${{ vars.HARBOR_HOSTNAME }}
          registry_username: ${{ secrets.HARBOR_USERNAME }}
          registry_password: ${{ secrets.HARBOR_PASSWORD }}
          build_tag: "sentimail/ms-content:latest"
          build_context: "ms-content"
  
  build_ms_metadata:
    runs-on: ubuntu-latest
    name: Build ms metadata
    outputs:
      image_id: ${{ steps.build.outputs.imageid }}
    steps:
      - uses: actions/checkout@v4
      - id: build
        uses: samoth69/build-push-check-action@v4
        with:
          registry_hostname: ${{ vars.HARBOR_HOSTNAME }}
          registry_username: ${{ secrets.HARBOR_USERNAME }}
          registry_password: ${{ secrets.HARBOR_PASSWORD }}
          build_tag: "sentimail/ms-metadata:latest"
          build_context: "ms-metadata"

  Deploy:
    runs-on: ubuntu-latest
    needs: 
      [
        "build_backend",
        "build_front",
        "build_ms_content",
        "build_ms_metadata"
      ]
    defaults:
      run:
        shell: bash
        working-directory: ./kube/sentimail-manual/sentimail
    steps:
      -
        name: checkout
        uses: actions/checkout@v4
      -
        name: install kustomize
        run: sudo snap install kustomize
      -
        name: write kubectl config
        run: |
          echo "apiVersion: v1
          kind: Config
          clusters:
          - name: default-cluster
            cluster:
              certificate-authority-data: ${K8S_CACERT}
              server: ${K8S_AUTH_HOST}
          contexts:
          - name: default-context
            context:
              cluster: default-cluster
              namespace: sentimail-dev
              user: sa-github-deploy
          current-context: default-context
          users:
          - name: sa-github-deploy
            user:
              token: ${K8S_AUTH_API_KEY}
          " > $RUNNER_TEMP/sa.kubeconfig
        env:
          RUNNER_TEMP: ${{ runner.temp }}
          K8S_CACERT: ${{ secrets.K8S_CACERT }}
          K8S_AUTH_API_KEY: ${{ secrets.K8S_AUTH_API_KEY }}
          K8S_AUTH_HOST: ${{ vars.K8S_AUTH_HOST }}
      -
        name: set backend image
        run: kustomize edit set image harbor.sentimail.samoth.eu/sentimail/backend@${{ needs.build_backend.outputs.image_id }}
      -
        name: set frontend image
        run: kustomize edit set image harbor.sentimail.samoth.eu/sentimail/frontend@${{ needs.build_front.outputs.image_id }}
      -
        name: set ms-metadata image
        run: kustomize edit set image harbor.sentimail.samoth.eu/sentimail/ms-metadata@${{ needs.build_ms_metadata.outputs.image_id }}
      -
        name: set ms-content image
        run: kustomize edit set image harbor.sentimail.samoth.eu/sentimail/ms-content@${{ needs.build_ms_content.outputs.image_id }}
      -
        name: apply config
        run: kustomize build | kubectl apply -f -
        env:
          KUBECONFIG: ${{ runner.temp }}/sa.kubeconfig